{"version":3,"file":"static/js/135.3d71c75d.chunk.js","mappings":"2NACA,EAAqC,yCAArC,EAAgG,sCAAhG,EAAyJ,uCAAzJ,EAA6M,iCAA7M,EAAsP,4BAAtP,EAA6R,+BAA7R,EAA6U,qCAA7U,EAA0X,4BAA1X,EAAoa,kCAApa,EAAkd,gCAAld,EAAqgB,uCAArgB,EAA4jB,oCAA5jB,EAAqnB,yCAArnB,EAA+sB,6B,kBCMzsBA,EAAkB,CACtB,CAAEC,KAAM,OAAQC,KAAM,QACtB,CAAED,KAAM,UAAWC,KAAM,YA4E3B,EAzEqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaR,GAASS,KAAKL,EAC5B,GAAE,CAACJ,IAECG,EAAL,CAGA,IACEO,EAOEP,EAPFO,cACAC,EAMER,EANFQ,MACAC,EAKET,EALFS,aACAC,EAIEV,EAJFU,aACAC,EAGEX,EAHFW,OACAC,EAEEZ,EAFFY,SACAC,EACEb,EADFa,eAGIC,EAAY,oBAAGZ,EAASa,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,QAEvCC,EAAcP,EAAaQ,MAAM,KAAK,GAAK,QAC3CC,GAAiC,GAAfV,GAAmBW,QAAQ,GAAK,KAElDC,EAAU,yCAAqCd,GAErD,OACE,iBAAKe,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMC,GAAIV,EAAcQ,UAAWC,EAAnC,sBAGA,iBAAKD,UAAWC,EAAhB,WACE,gBAAKE,IAAKJ,EAAYK,IAAKb,EAAgBS,UAAWC,KACtD,iBAAKD,UAAWC,EAAhB,UACG,KACD,0BACGf,EADH,KACYS,EADZ,QAGA,eAAGK,UAAWC,EAAd,yBAAsCJ,MACtC,cAAGG,UAAWC,EAAd,wBACA,cAAGD,UAAWC,EAAd,SAAmCX,KACnC,cAAGU,UAAWC,EAAd,oBACCZ,EAAOgB,KAAI,SAAAC,GAAI,OACd,cAAGN,UAAWC,EAAd,SACGK,EAAKC,MAD4BD,EAAKC,KAD3B,WAOpB,iBAAKP,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,sCACA,eAAID,UAAWC,EAAf,SACG7B,EAAgBiC,KAAI,gBAAGhC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACnB,yBACE,SAAC,KAAD,CACE4B,GAAI7B,EACJ2B,UAAWC,EACXR,MAAO,CAAEC,KAAMd,GAHjB,SAKGN,KANID,EADU,UAazB,SAAC,KAAD,MAzDH,CA4DF,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container__details\":\"MovieDetails_container__details__W9MPM\",\"container__info\":\"MovieDetails_container__info__wm7ff\",\"container__movie\":\"MovieDetails_container__movie__zSaks\",\"backButton\":\"MovieDetails_backButton__pPF5M\",\"score\":\"MovieDetails_score__p8Kk2\",\"overview\":\"MovieDetails_overview__U5Vnb\",\"overview__text\":\"MovieDetails_overview__text__NB7hd\",\"genre\":\"MovieDetails_genre__+tTbx\",\"genre__item\":\"MovieDetails_genre__item__yrh7S\",\"add__info\":\"MovieDetails_add__info__4LXAC\",\"details__element\":\"MovieDetails_details__element__8ouHP\",\"add__infoText\":\"MovieDetails_add__infoText__VpwTD\",\"container__addInfo\":\"MovieDetails_container__addInfo__+kB8+\",\"release\":\"MovieDetails_release__1KvsW\",\"poster\":\"MovieDetails_poster__yO7gD\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'Fetch/getMovies';\nimport css from '../MovieDetails/MovieDetails.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NavItemsDetails = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n  const {\n    backdrop_path,\n    title,\n    vote_average,\n    release_date,\n    genres,\n    overview,\n    original_title,\n  } = movie;\n\n  const backLinkHref = location.state?.from ?? '/home';\n\n  const realiseYear = release_date.split('-')[0] + ' year';\n  const votePercentage = (vote_average * 10).toFixed(2) + ' %';\n\n  const imageRoute = `https://image.tmdb.org/t/p/w500${backdrop_path}`;\n\n  return (\n    <div className={css.container__details}>\n      <Link to={backLinkHref} className={css.backButton}>\n        Go back\n      </Link>\n      <div className={css.container__info}>\n        <img src={imageRoute} alt={original_title} className={css.poster} />\n        <div className={css.container__movie}>\n          {' '}\n          <h1>\n            {title} ({realiseYear})\n          </h1>\n          <p className={css.score}>User score: {votePercentage}</p>\n          <p className={css.overview}>Overview:</p>\n          <p className={css.overview__text}>{overview}</p>\n          <p className={css.genre}>Genre:</p>\n          {genres.map(item => (\n            <p className={css.genre__item} key={item.name}>\n              {item.name}\n            </p>\n          ))}\n        </div>\n      </div>\n      <div className={css.container__addInfo}>\n        <p className={css.add__infoText}>Additional information:</p>\n        <ul className={css.add__info}>\n          {NavItemsDetails.map(({ href, text }) => (\n            <li key={href}>\n              <Link\n                to={href}\n                className={css.details__element}\n                state={{ from: location }}\n              >\n                {text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["NavItemsDetails","href","text","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","getMovieById","then","backdrop_path","title","vote_average","release_date","genres","overview","original_title","backLinkHref","state","from","realiseYear","split","votePercentage","toFixed","imageRoute","className","css","to","src","alt","map","item","name"],"sourceRoot":""}