{"version":3,"file":"static/js/462.d7b78c9e.chunk.js","mappings":"gMACA,GAAgB,OAAS,uBAAuB,mBAAqB,mCAAmC,mBAAqB,mCAAmC,mBAAqB,oC,oCCArL,EAAuB,wBAAvB,EAAuD,yBAAvD,EAA8F,+BAA9F,EAA6I,iC,SCChIA,EAAY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC5C,OACE,kBAAMC,UAAWC,EAAUC,SAAUL,EAArC,WACE,kBACEM,KAAK,OACLH,UAAWC,EACXH,SAAU,SAAAM,GAAG,OAAIN,EAASM,EAAIC,cAAcN,MAA/B,EACbO,YAAY,gBACZC,aAAa,MACbC,WAAS,EACTT,MAAOA,KAET,mBAAQI,KAAK,SAASH,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,wBAIP,ECkDD,EA9De,WAAO,IAAD,EACbQ,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,IAAnC,eAAOM,EAAP,KAAcC,EAAd,KAEMC,EAAM,UAAGJ,EAAaK,IAAI,iBAApB,QAAiC,IAE7CC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,IAAgBH,GAAQI,KAAKV,EAC9B,GAAE,CAACM,IAiBJ,OACE,kBAAMnB,UAAWC,EAAAA,aAAjB,WAIE,SAACL,EAAD,CACEE,SArBoB,SAAAC,GACxBmB,EAASnB,EACV,EAoBKF,OAlBe,SAAAO,GACnBA,EAAIoB,iBAEiB,KAAjBP,EAAMQ,QAIVT,EAA0B,KAAVC,EAAe,CAAEE,OAAQF,GAAU,CAAC,GACpDC,EAAS,KAJPQ,MAAM,mBAKT,EAUK3B,MAAOkB,IAERL,EAAOe,OAAS,IACf,eAAI3B,UAAWC,EAAAA,mBAAf,SACGW,EAAOgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,eAAa9B,UAAWC,EAAAA,mBAAxB,UACE,UAAC,KAAD,CACE8B,GAAE,UAAKF,GACP7B,UAAWC,EAAAA,mBACX+B,MAAO,CAAEC,KAAMxB,GACfA,SAAUA,EAJZ,UAMG,IACAqB,MARID,EADC,OAehB,SAAC,KAAD,MAGL,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","webpack://goit-react-hw-05-movies/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"Movies_movies__TE99a\",\"searchMovies__list\":\"Movies_searchMovies__list__L+03O\",\"searchMovies__item\":\"Movies_searchMovies__item__sXkyB\",\"searchMovies__link\":\"Movies_searchMovies__link__wiR9p\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBox_form__GByKm\",\"input\":\"SearchBox_input__+nuoc\",\"btn__submit\":\"SearchBox_btn__submit__vWAYQ\",\"button__label\":\"SearchBox_button__label__Zmi-m\"};","import css from './SearchBox.module.css';\n\nexport const SearchBox = ({ submit, onChange, value }) => {\n  return (\n    <form className={css.form} onSubmit={submit}>\n      <input\n        type=\"text\"\n        className={css.input}\n        onChange={evt => onChange(evt.currentTarget.value)}\n        placeholder=\"Search movies\"\n        autoComplete=\"off\"\n        autoFocus\n        value={value}\n      />\n      <button type=\"submit\" className={css.btn__submit}>\n        <span className={css.button__label}>Search</span>\n      </button>\n    </form>\n  );\n};\n","import css from './Movies.module.css';\nimport { Outlet, Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { getFilterMovies } from 'Fetch/getMovies';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n\n  const filter = searchParams.get('filter') ?? '';\n\n  useEffect(() => {\n    if (!filter) {\n      return;\n    }\n    getFilterMovies(filter).then(setMovies);\n  }, [filter]);\n\n  const handleMovieChange = value => {\n    setQuery(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Enter some data!');\n      return;\n    }\n    setSearchParams(query !== '' ? { filter: query } : {});\n    setQuery('');\n  };\n\n  return (\n    <main className={css.searchMovies}>\n      {/* {!movies.length > 0 && (\n        <SearchBox onChange={handleMovieChange} submit={handleSubmit} />\n      )} */}\n      <SearchBox\n        onChange={handleMovieChange}\n        submit={handleSubmit}\n        value={query}\n      />\n      {movies.length > 0 && (\n        <ul className={css.searchMovies__list}>\n          {movies.map(({ id, title }) => (\n            <li key={id} className={css.searchMovies__item}>\n              <Link\n                to={`${id}`}\n                className={css.searchMovies__link}\n                state={{ from: location }}\n                location={location}\n              >\n                {' '}\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Outlet></Outlet>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchBox","submit","onChange","value","className","css","onSubmit","type","evt","currentTarget","placeholder","autoComplete","autoFocus","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","setQuery","filter","get","useEffect","getFilterMovies","then","preventDefault","trim","alert","length","map","id","title","to","state","from"],"sourceRoot":""}